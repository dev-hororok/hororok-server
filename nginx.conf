# Nginx가 실행될 사용자 지정 (일반적으로 보안상의 이유로 nginx 사용자를 사용)
user nginx;

# worker_processes는 Nginx가 사용할 작업자 프로세스의 수
# 'auto'는 CPU 코어 수에 따라 자동으로 프로세스 수 결정
worker_processes auto;

# 에러 로그의 위치와 로깅 레벨, 'warn' 레벨은 경고와 심각한 에러만 기록
error_log /var/log/nginx/error.log warn;

# Nginx 마스터 프로세스의 PID 파일 위치 (pid를 참조하여 백업, 자동 재시작 등 프로세스를 제어할 수 있음)
pid /var/run/nginx.pid;

# 네트워크 연결 처리에 대한 설정
events {
    # 한 작업자 프로세스가 동시에 처리할 수 있는 최대 연결 수
    worker_connections 1024;
}

# HTTP 서버에 대한 설정
http {
    # MIME 타입 설정 파일을 포함(기본 제공)
    include /etc/nginx/mime.types;

    # 서버가 알고있는 MIME 타입이 아닐때 사용되는 기본 MIME 타입 (일반적인 이진 데이터를 나타냄)
    default_type application/octet-stream;

    # upstream 디렉티브는 로드 밸런싱을 위한 서버 그룹을 정의
    # 여기서는 API 서버와 타이머 서버 두 개의 그룹을 정의
    upstream api-server {
        server hororok-api:4000;
    }

    upstream timer-server {
        server timer-app:4000;
    }

    # 서버와 관련된 설정
    server {
        # 서버가 8080 포트에서 읽도록 설정
        listen 8080;

        # location 블록은 특정 경로에 대한 설정을 정의
        # /hororok-api로 시작하는 요청을 api-server 그룹으로 프록시
        location /hororok-api {
            proxy_pass http://api-server;
        }

        # /timer-api로 시작하는 요청을 timer-server 그룹으로 프록시
        location /timer-api {
            proxy_pass http://timer-server;
        }
    }

    # 로그 포맷 정의
    log_format main '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    # 액세스 로그의 위치와 사용할 로그 포맷을 설정
    access_log /var/log/nginx/access.log main;

    # sendfile 지시어를 사용하여 파일 전송 성능을 향상
    sendfile on;

    # keepalive 연결의 타임아웃 시간을 설정
    keepalive_timeout 65;

    # 추가 구성 파일을 포함
    include /etc/nginx/conf.d/*.conf;
}
