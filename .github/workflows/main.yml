name: CI/CD Pipeline

on:
  push:
    branches: ['main']

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
      - name: Setup node.js 20.9.0
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0
          cache: 'yarn'
      - run: yarn install
      - run: yarn test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login Dockerhub
        env:
          DOCKER_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build the Docker image
        run: docker build -t hororok-api -f ./DockerFile .
      - name: taging
        run: docker tag hororok-api:latest changwoot/hororok-api:latest
      - name: Push to Dockerhub
        run: docker push changwoot/hororok-api:latest

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Pull Docker image
        run: sudo docker pull changwoot/hororok-api:latest
      - name: Delete Old docker container
        run: sudo docker rm -f hororok-api-container || true
      - name: Run Docker Container
        run: |
          sudo docker run -d -p 80:${{ secrets.PORT }} \
          -e MONGODB_URL=${{ secrets.MONGODB_URL }} \
          -e MONGODB_PORT=${{ secrets.MONGODB_PORT }} \
          -e PORT=${{ secrets.PORT }} \
          -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
          -e JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
          --name hororok-api-container changwoot/hororok-api
